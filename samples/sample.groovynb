{"cells":[{"kind":2,"language":"groovy","value":"a = 1 + 1\nprint a\n\nb = [a:[b:2, c:[1,2,3]]]"},{"kind":2,"language":"groovy","value":"pp b\np('*' * b.toString().size())\np b"},{"kind":2,"language":"groovy","value":"\"powershell pwd\".execute().text"},{"kind":2,"language":"groovy","value":"assert new SameDir().say() =~ \"relative path\""},{"kind":2,"language":"groovy","value":"addClasspath \"other-path\""},{"kind":2,"language":"groovy","value":"assert new Cow().say() =~ /M[Oo]{2,}!/\nassert new Cow().say() =~ /LOL/"},{"kind":2,"language":"groovy","value":"import groovy.transform.TypeChecked\n\n@TypeChecked(extensions = 'groovy.typecheckers.RegexChecker')\ndef testRegexChecker() {\n    def date = '2022-04-03'\n\n    assert date ==~ /(\\d{4})-(\\d{1,2})-(\\d{1,2}/\n}"},{"kind":2,"language":"groovy","value":"grab 'org.ccil.cowan.tagsoup:tagsoup:1.2'"},{"kind":2,"language":"groovy","value":"System.exit(0)"},{"kind":2,"language":"groovy","value":"Thread.sleep(10000)"},{"kind":2,"language":"groovy","value":"Thread.sleep(10000)"},{"kind":2,"language":"groovy","value":"ProcessHandle.current().pid();"}]}